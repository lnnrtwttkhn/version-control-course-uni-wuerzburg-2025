---
title: "Session 1: Welcome & Introduction to Version Control"
date: 2025-11-04T09:00:00
format: revealjs
metadata-files:
  - _slides.yml
---

# Logistics & Admin

{{< include _about.qmd >}}

## Who are you?

:::: {.columns}
::: {.column width="40%"}
1. Your name?
1. Your preferred pronouns?
1. Your research?
1. Your mood on a sheep scale?
:::
::: {.column width="60%"}
::: {.fragment}
![](../images/mood-sheep.png){fig-alt="Mood on a sheep scale."}
:::
:::
::::

## Course overview

:::: {.columns}
::: {.column width="50%"}
- {{< fa calendar-days >}} **Date:** {{< var course.when-day >}}, {{< var course.when-date >}}
- {{< fa clock >}} **Time:** {{< var course.when-time >}}
- {{< fa building-columns >}} **Room:** {{< var course.where-room >}}
:::
::: {.column width="50%"}
- {{< fa person-chalkboard >}} **Instructor:** [{{< var course.instructors >}}]({{< var team.lennart.website >}})
- {{< fa chalkboard >}} **Event:** Course ({{< var course.duration >}})
- {{< fa language >}} **Language:** English
:::
::::

## What will the average session look like?

::: {.fragment}
{{< fa clock >}} The course consists of 6 main sessions (ca. up to 60 minutes each)
:::

::: {.fragment}
1. {{< fa chalkboard-user >}} **Demonstration (up to 15 minutes):**
<br> The instructor introduces the topic and gives a short demonstration of the main tools and practices.
:::

::: {.fragment}
2. {{< fa laptop-code >}} **Exercises (up to 30 minutes):**
<br>Course participants work on hands-on exercises and assignments.
:::

::: {.fragment}
3. {{< fa comments >}} **Discussions (up to 15 minutes):**
<br>Course participants and instructor collectively address any questions related to the session's content.
:::

::: {.fragment}
This is a *work*shop.
:::

## Schedule

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
create_schedule()
```

## Course website

{{< fa display >}} [{{< var project.site >}}]({{< var project.site >}})

```{=html}
<iframe width="100%" height="80%" src="{{< var project.site >}}" title="Course Website"></iframe>
```

::: {.notes}
- Course website is the main entry point for students before, during and after the course
- Contents: Overview, course details, schedule, information about the team, additional resources and course mechanics
- Practical advantage: Update course information independently from university websites that are out of your control
:::

## Version Control Book

{{< fa display >}} [{{< var links.book >}}]({{< var links.book >}})

```{=html}
<iframe width="100%" height="80%" src="{{< var links.book >}}" title="Version Control Book"></iframe>
```

## DataLad Handbook {visibility="hidden"}

{{< fa display >}} [{{< var links.datalad-handbook >}}]({{< var links.datalad-handbook >}})

```{=html}
<iframe width="100%" height="80%" src="{{< var links.datalad-handbook >}}" title="Datalad Handbook"></iframe>
```

## Quizzes & Surveys {visibility="hidden"}

::: {.fragment}
- We use online surveys to ask you questions and implement exercises or quizzes
- Implemented in the [formr]({{< var links.formr >}}) survey framework (open-source, hosted in Germany)
:::

::: {.fragment}
#### Anonymity & data usage

- all raw data are kept **anonymous** and will only be **used for research and educational purposes**
- if responses are shared as part of the course, they will be aggregated to ensure anonymity is maintained
- if you want your data to be deleted, send an email with your personal codeword to [{{< var project.email-secretary >}}]({{< var project.mailto-secretary >}}).
Your codeword is then forwarded to us (without your name) and your data deleted.
:::

## Cheatsheets

- Each session / chapter / slidedeck contains a cheatsheet with relevant commands.
- For an overview of all cheatsheets, see <https://lennartwittkuhn.com/version-control-book/misc/cheatsheet.html>.

::: {.fragment}
### Example cheatsheet: Basic Git commands

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
knitr::kable(table_cheatsheet(name = "basic"), format = "markdown", row.names = FALSE)
```
:::

## Pair Programming (variant)

::::: {.columns}
:::: {.column width="60%"}
- Find and say hello to your nearest desk neighbor
- Complete the exercises together, help each other out, etc.
::::
:::: {.column width="40%"}
![This illustration is created by [Scriberia](https://www.scriberia.com/) with [The Turing Way community](https://the-turing-way.netlify.app/welcome). Used under a [CC-BY 4.0 licence](https://creativecommons.org/licenses/by/4.0/). DOI: [10.5281/zenodo.3332807](https://doi.org/10.5281/zenodo.3695300)](../images/turing-way-community.svg)
::::
:::::

## Course exercise: Building an online recipes book

{{< fa display >}} [{{< var course.project-site >}}]({{< var course.project-site >}})

```{=html}
<iframe width="100%" height="80%" src="{{< var course.project-site >}}" title="Course Website"></iframe>
```

## Let's do the splits

![](../images/splits.jpg){fig-align="center" width="35%"}

## Code of Conduct

{{< include ../_code-of-conduct.qmd >}}

## Breaks

- We will have a one-hour lunch break at 13:00.
- Feel free to take short breaks in-between sessions (~ last 5 minutes) when needed.

## Learning objectives

{{< include _learning-objectives-note.qmd >}}

{{< include ../objectives/_objectives-intro.qmd >}}

# Introduction to Reproducible Research

## Definition of reproducibility

::::: {.columns}
:::: {.column width="50%"}
::: {.fragment}

### Research is reproducible ...

*"... when the **same analysis** steps performed on the **same dataset** consistently produce the **same answer**."* ^[@turingway2022, see ["Guide on Reproducible Research"](https://the-turing-way.netlify.app/reproducible-research/overview/overview-definitions)]

![by [Scriberia]({{< var links.scriberia >}}) for @turingway2022 ([Link](https://zenodo.org/record/3678226/), [CC BY
4.0]({{< var links.ccby40 >}}))](../images/turing-way-reproducibility.png)
:::
::::
:::: {.column width="50%"}
::: {.fragment}
![by [Scriberia]({{< var links.scriberia >}}) for @turingway2022 ([Link](https://zenodo.org/record/3678226/), [CC BY
4.0]({{< var links.ccby40 >}}))](../images/reproducible-matrix.jpg)
:::
::: {.fragment}
- In short: Someone else can run your analysis *on their computer* and gets the same results
- Reproducibility as a minimal requirement for research?
- This course: Focus on **computational reproducibility**
:::
::::
:::::

## Current state of reproducibility in (psychological) research

::::: {.columns}
:::: {.column width="50%"}
::: {.fragment}
### @artner2021

- Analyzed 46 articles from three APA journals in 2012.
- Extracted 232 statistical claims from these papers.
- Successfully reproduced 163 statistical results (70%).
- Focus: Reproducibility of individual statistical claims.
:::
::: {.fragment}
### @hardwicke2021

- Analyzed 25 articles published in *Psychological Science* (2014–2015) with Open Data Badges.
- 15 articles (60%) were fully reproducible.
- 9 out of these 15 (60%) were reproducible without author involvement.
- Focus: Study-level reproducibility.
:::
::::
:::: {.column width="50%"}
::: {.fragment}
### @crüwell2023

- Investigated 14 articles from a more recent issue of *Psychological Science*.
- Only 1 out of 14 articles was exactly reproducible.
- 3 additional articles were essentially reproducible with minor deviations.
- All articles had Open Data Badges.
:::
::: {.fragment}

### @obels2020

- Analyzed 62 registered reports in Psychology (2014-18).
- 36 reports (58%) shared both data and code.
- Of those, 21 (58%) were found to be reproducible.
- Focus: Impact of open science practices on reproducibility.
:::
::::
:::::

## The issue of computational reproducibility in science

::::: {.columns}
:::: {.column width="50%"}
::: {.fragment}
*"... when the **same analysis** steps performed on the **same dataset** consistently produce the **same answer**."* ^[@turingway2022, see ["Guide on Reproducible Research"](https://the-turing-way.netlify.app/reproducible-research/overview/overview-definitions)]

![by [Scriberia]({{< var links.scriberia >}}) for @turingway2022 ([Link](https://zenodo.org/record/3678226/), [CC BY
4.0]({{< var links.ccby40 >}}))](../images/turing-way-reproducibility.png)
:::
::::
:::: {.column width="50%"}
::: {.fragment}
### The problem
:::
::: {.incremental}
- about **more than half** of research is **not reproducible** [^1]
  - research data, code, software & materials are **often not available** "upon *reasonable* [sic] request"
  - if resources are shared, they are **often incomplete**
- 90% of researchers: "reproducibility crisis" (*N* = 1576) ^[see @baker2016, *Nature*]

:::
::: {.fragment}
### Why?
:::
::: {.incremental}
- computational reproducibility is hard
- researchers lack training 
- incentives are not (yet) aligned ^[see e.g., @poldrack2019]
- *more ...*
:::
::::
:::::

::: {.fragment}
"*... accumulated evidence indicates [...] **substantial room for improvement** with regard to research practices to maximize the efficiency of the research community's use of the public's financial investment.*" [@munafò2017]
:::
::: {.fragment}
We need a **professional toolkit** for digital research!
:::

[^1]: for example, in Psychology: @crüwell2023; @hardwicke2021; @obels2020; @wicherts2006


::: {.notes}
- also called "analytical reproducibility"
- in contrast: "Replication" = same analysis on different data
- computational reproducibility should be a *minimum* requirement
- 90% of respondents to a survey in Nature agreed that there is a "reproducibility crisis"
- non-scientist friends react very surprised at the lack of professionalization in science
- we are currently violating the public's trust = deep ethical problem
- natural selection: as a researcher, what's good for your career is not necessarily good for science (how to get funding, how to get published, how to get cited)
- journals are interested in selling us back our data, not improving the quality of science
:::

## What about Open Science?

Open science is an umbrella term for **activities that aim to promote open approaches to science and research**.

![by Robin Champieux ([CC BY
4.0]({{< var links.ccby40 >}}))](../images/open-science-umbrella.jpg){.nostretch fig-align="center" width="50%"}


::: {.fragment}
- Note: Research can be reproducible but not open
- This course: Focus on **better transparency and more effective collaboration through version control**
:::

## Two main challenges for reproducible scientific workflows  {visibility="hidden"}

::::: {.columns}
:::: {.column width="50%"}
::: {.fragment}
### Version Control
![[&copy; Jorge Cham (phdcomics.com)](http://phdcomics.com/comics/archive/phd052810s.gif)](../images/phd-git-original.png)
:::
::::
:::: {.column width="50%"}
::: {.fragment}
### Computational Environments
![](../images/docker-meme.png){width="70%"}
:::
::::
:::::

## What can we do?

::: {.fragment}
```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
create_schedule()
```
:::

# Introduction to Version Control

## Scenario 1

> Imagine a scenario where you crafted a brilliant paragraph for a manuscript (for example, your paper, thesis, or report), but then accidentally ruined it.
**How would you retrieve the earlier brilliant version? Is it even possible?**

::: {.incremental}

- "Only if I saved it before - otherwise, I'd have to draft another brilliant paragraph."
- "I might be able to find it in a cloud backup, like OneDrive or Google Drive."
- "I frequently email it to myself"
- "Version control?"
- "I'd simply revert to the relevant commit."

:::

## Scenario 2

> Consider a situation where you are working with five co-authors on a paper.
**How do you handle the changes and comments they make to the document?**
If you're using LibreOffice Writer or Microsoft Word and you accept changes made using the "Track Changes" option, **what happens to the history of those modifications?**

::: {.incremental}

- "I always save new versions of files with my initials (and others' initials when I receive the document), which often results in having 10–20 different file versions."
- "I believe the history of modifications is lost after accepting the changes ..."

:::

## Why we need version control ...

:::: {.columns}
::: {.column width="42%"}
::: {.fragment}
... for **code** (text files)
![[&copy; Jorge Cham (phdcomics.com)](http://phdcomics.com/comics/archive/phd101212s.gif)](http://phdcomics.com/comics/archive/phd101212s.gif)
:::
:::
::: {.column width="58%"}
::: {.fragment}
... for **data** (binary files)
![[&copy; Jorge Cham (phdcomics.com)](http://phdcomics.com/comics/archive/phd052810s.gif)](http://phdcomics.com/comics/archive/phd052810s.gif)
:::
::: {.fragment}
**When everything is relevant ...**
:::
::: {.fragment}
**... track everything.**
:::
:::
::::

::: {.notes}
- Version control is relevant for anyone who wants to track the evolution of digital objects
- Credit: Adapted from [Slides on "Research Data Management with DataLad"](http://datasets.datalad.org/datalad/datalad-course/html/mpsc-introduction.html#/5) by Adina Wagner & Michael Hanke]
:::

## What is version control?

::: {.fragment}
*"Version control is a systematic approach to record changes made in a [...] set of files, over time. This allows you and your collaborators to track the history, see what changed, and recall specific versions later [...]"* ([Turing Way](https://the-turing-way.netlify.app/reproducible-research/vcs.html))
:::

::::: {.columns}

:::: {.column width="50%"}
::: {.fragment}
{{< fa laptop-code >}} keep track of changes in a directory (a "repository")

{{< fa code-commit >}} take snapshots ("commits") of your repo at any time

{{< fa timeline >}} know the history: what was changed when by whom

{{< fa code-compare >}} compare commits and go back to any previous state

{{< fa code-pull-request >}} work on parallel "branches" & flexibly "merge" them

![[by Scriberia for The Turing Way community (CC-BY 4.0)](https://zenodo.org/record/3695300/files/VersionControl.jpg?download=1)](../images/version-control-turing-way-scriberia.jpg){width=80% fig-align="center"}
:::
::::

:::: {.column width="50%"}
::: {.fragment}
{{< fa upload >}} "push" your repo to a "remote" location & share it

{{< fa brands github >}} {{< fa brands gitlab >}} share repos on platforms like GitHub or GitLab

{{< fa people-group >}} work together on the same files at the same time

{{< fa pen-to-square >}} others can read, copy, edit and suggest changes

{{< fa box-open >}} make your repo public and openly share your work

![[by Scriberia for The Turing Way community (CC-BY 4.0)](https://zenodo.org/record/3695300/files/FirstPullRequest.jpg?download=1)](../images/first-pull-request-turing-way-scriberia.jpg){width=84% fig-align="center"}
:::
::::
:::::

## What is Git?

:::: {.columns}

::: {.fragment}
![[git-scm.com](https://git-scm.com/)](../images/git-logo-full.svg){fig-align="center" width=50%}

- most popular version control system
- free, [open-source](https://github.com/git) command-line tool
- graphical user interfaces exist, e.g., [GitKraken](https://www.gitkraken.com/)
- standard tool for most (all?) software developers

:::

::::

::: {.notes}
- Version control is relevant for anyone who wants to track the evolution of digital objects
:::

## What is GitHub?

:::: {.columns}

::: {.fragment}
![[github.com](https://github.com/)](../images/git-github-integration.png){fig-align="center" width=50%}

- cloud-based platform for version control using Git
- allows for collaboration on (coding) projects in real time
- hosts millions of public and private repositories
- supports both Git command line and GUI tools (e.g., [GitHub Desktop](https://desktop.github.com/))
- enables code sharing, project management, issue tracking, and continuous integration
- used by companies, open-source communities, and individual developers worldwide
- 100 million users ^[(Source: [Wikipedia](https://en.wikipedia.org/wiki/GitHub))]

:::

::::

## More benefits of Git(Hub) for project management

- {{< fa bug >}} Discuss and plan your project in [issues](https://github.com/features/issues) (even just with your future / past self)
- {{< fa comments >}}  Ask questions, share ideas and discuss with your community via [GitHub Discussions](https://github.com/features/discussions)
- {{< fa code-pull-request >}} Propose changes to each other's projects using [pull requests](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests) ^[*pull* requests on GitHub, *merge* requests on GitLab]
- {{< fa code-fork >}} Create a [fork](https://docs.github.com/en/get-started/quickstart/fork-a-repo) of someone else's repository and extend their work
- {{< fa key >}} Manage access to your projects with detailed [permissions and roles](https://docs.gitlab.com/ee/user/permissions.html)
- {{< fa book-medical >}} Add documentation to your repository or in a separate [wiki](https://docs.github.com/en/communities/documenting-your-project-with-wikis/about-wikis)
- {{< fa graduation-cap >}} Access to more features and tools for teaching via [GitHub Campus Global](https://education.github.com/)

::: {.fragment}
**Note**

- {{< fa brands github >}} The dominance of GitHub (a for-profit company owned by Microsoft) is not uncontested (see [#GiveUpGitHub](https://sfconservancy.org/GiveUpGitHub/))
- {{< fa boxes-packing >}} A project on GitHub is not a FAIR archiving of scholarly outputs (see previous and following slides)
:::

::: {.notes}
- GitHub Copilot is a for-profit AI product trained with projects that were hosted on GitHub, including many that have licenses that require proper author attribution etc.
- GitHub has a for-profit software services contract with the USA Immigration and Customs Enforcement (ICE)
- Archiving on GitHub is not enough
:::

# Outlook

## Goal

:::: {.columns}
::: {.column width="50%"}
### From this ...
![](../images/phd-git-original.png)
:::
::: {.column width="50%"}
::: {.fragment}
### To this ...
![](../images/phd-git-solo.png)
:::
:::
::::

## Schedule

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
create_schedule()
```

## Prerequisite: Basics of the command line

![Source: [Wikimedia Commons](https://commons.wikimedia.org/wiki/File:Linux_command-line._Bash._GNOME_Terminal._screenshot.png) (free license)](../images/command-line.png)

## References

:::{#refs}
:::
