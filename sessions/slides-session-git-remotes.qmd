---
title: "Session 6: {{< meta session-title >}}"
date: 2025-10-30T13:30:00
format: revealjs
metadata-files:
  - _slides.yml
session-title: "Integration with GitHub / GitLab"
chapter: |
  ["Remotes - Introduction"](https://lennartwittkuhn.com/version-control-book/chapters/remotes-intro.html)
quiz-url: https://version-control-github.formr.org/
---

# Last session: First steps with Git & Git Essentials

## Last session: First steps with Git & Git Essentials

After the last session, you should now be able to answer the following questions / do the following:

::: fragment
### First steps with Git

{{< include ../objectives/_objectives-firststeps.qmd >}}
:::

::: {.fragment}
### Git essentials

{{< include ../objectives/_objectives-essentials.qmd >}}
:::

## Last session: Cheatsheet

### First steps with Git

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
knitr::kable(table_cheatsheet(name = "basic"), format = "markdown", row.names = FALSE)
```

## Last session: Cheatsheet

### Git essentials

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
knitr::kable(table_cheatsheet(name = "essentials"), format = "markdown", row.names = FALSE)
```

## Last session: `{{< var course.project >}}` project

### First steps with Git

{{< include project/project-basics.qmd >}}

## Last session: `{{< var course.project >}}` project

### Git Essentials

{{< include project/project-essentials.qmd >}}

## Common questions from last session

::: fragment
#### {{< fa circle-question >}} *"How can I make changes in a text (`.txt`) file?"*
- Remember: **It's just a regular text file on your computer.**
- Option 1: Use a regular text editor (e.g., TextEdit on macOS, Notepad++ on Windows, or others).
- Option 2: Use `vim` directly from the command line (see chapter / session on "Setup").
- Option 3: Use command line commands like `echo "My text" >> {{< var course.project >}}.txt`.
:::

::: fragment
#### {{< fa circle-question >}} *"I ran `git commit` but nothing happened?"*
- Maybe you forgot to run `git add` before?
:::

::: fragment

#### {{< fa circle-exclamation >}} *"Remember to `cd` into your `{{< var course.project >}}` project folder!"*

- Every time you open the command line, it starts at a default location (likely your home directory).
- Check in which folder you are, using `pwd` ("print working directory").
- Use `cd` to move to your `{{< var course.project >}}` project folder before you start running the Git commands.

:::

{{< include _git-home-directory.qmd >}}

## Staging and Committing

::: columns
::: {.column width="50%"}
### Staging:

-   Command: `git add`
-   Purpose: Preparing and organizing files before they are recorded in the repository's history.
:::

::: {.column width="50%"}
### Committing:

-   Command: `git commit -m "commit message"`
-   Purpose: Saving the changes in the staged files to the repository's history, creating a snapshot.
:::
:::

::: columns
::: {.column width="50%"}
::: fragment
![Source: [git-scm.com](https://git-scm.com/book/en/v2)](../images/git-staging-diagram.png){width="100%"}
:::
:::
::: {.column width="50%"}
::: fragment
![Source: [Heidi Seibold](https://docs.google.com/presentation/d/1Yj59XAAJZQprO-kfDHzHMtjJDttMFAqkkslqcSIRZKg/edit#slide=id.p)](../images/git-analogy-letter.png){width="100%"}
:::
:::
:::

# This session: {{< meta session-title >}}

## This session: {{< meta session-title >}}

![Image from [Techdobz](https://medium.com/analytics-vidhya/version-control-using-git-github-ff4c3f7c752e)](../images/git-github-integration.png){width="70%"}

## This session: Collaboration via Git and GitHub

![](../images/pull-request-example-zi-mannheim.png){width="80%"}

[Link to Pull Request](https://github.com/lnnrtwttkhn/version-control-course-zi-mannheim-2025/pull/7)

## Learning objectives

{{< include ../objectives/_objectives-remotes-intro.qmd >}}

## Reading

{{< fa display >}} {{< meta chapter >}}

```{=html}
<iframe width="100%" height="80%" src="https://lennartwittkuhn.com/version-control-book/chapters/remotes-intro.html"></iframe>
```

## Tasks

{{< include tasks/tasks-template.qmd >}}

## `{{< var course.project >}}` project

{{< include project/project-github-intro.qmd >}}

## Cheatsheet

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
knitr::kable(table_cheatsheet(name = "remote_intro"), format = "markdown", row.names = FALSE)
```

## Exercises (1)

**Mandatory for everyone!**

### Connect to remote repositories using SSH

{{< include ../exercises/_exercises-remotes-ssh.qmd >}}

### Upload your local repository to a remote repository

{{< include ../exercises/_exercises-remotes-push.qmd >}}

## Exercises (2)

**Collaboration Option 1 (Basic)**

### Private collaboration on default branch (`main` or `master`)

1. Add your exercise partner as a collaborator to your project repository on GitHub.
1. Clone your partner's repository.
1. Add a new change to your collaborator's project file (if you are unsure, where to add the entry, ask your collaborator!)
1. Add and commit the changes.
1. Push the changes to the remote repository.
1. Pull your partner's changes into your repository.

## Exercises (3)

**Collaboration Option 2 (Advanced)**

### Private collaboration with pull requests (using GitHub Flow)

{{< include ../exercises/_exercises-remotes-collaboration.qmd >}}

## Exercises (4)

**Collaboration Option 3 (Alternative)** 

### Clone and sync your repository

{{< include ../exercises/_exercises-remotes-clone.qmd >}}

## :rocket: Bonus exercises

### Add a `README.md`

{{< include ../exercises/_exercises-remotes-readme.qmd >}}

## Solutions

### Connect to remote repositories using SSH

```{zsh, filename="Code"}
#| eval: false
#| file: exercises/code-exercises-remotes-ssh.sh
```
{{< include ../exercises/_solutions-remotes-ssh.qmd >}}

## Solutions

### Upload your local repository to a remote repository

```{zsh, filename="Code"}
#| eval: false
#| file: exercises/code-exercises-remotes-push.sh
```
{{< include ../exercises/_solutions-remotes-push.qmd >}}

## Solutions

### "Private" collaboration with pull requests (using GitHub Flow)

```{zsh, filename="Code"}
#| eval: false
#| file: exercises/code-exercises-remotes-collaboration.sh
```
{{< include ../exercises/_solutions-remotes-collaboration.qmd >}}

## Solutions

### Add a `README.md`

{{< include ../exercises/_solutions-remotes-readme.qmd >}}

## Solutions

### Clone and sync your repository

```{zsh, filename="Code"}
#| eval: false
#| file: exercises/code-exercises-remotes-clone.sh
```
{{< include ../exercises/_solutions-remotes-clone.qmd >}}

# Appendix

## Cloning

::: {.fragment}
#### Cloning
- Remember to clone a repo in a sensible location (not in your own repository)
- To rename the cloned repo you can use: `git clone <URL> new-folder-name`
:::
